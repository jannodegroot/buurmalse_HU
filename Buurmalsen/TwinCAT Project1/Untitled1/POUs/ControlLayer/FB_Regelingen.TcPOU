<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="FB_Regelingen" Id="{ba4530f9-bec4-46f8-8992-3ba5eead477b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Regelingen
VAR
	internalBesturingsMode : E_Besturingsmodus;
	internalRegelschuifStandV2013 : SINT;
	internalRegelschuifStandV2022 : SINT;
	internalToerentalP2011 : INT;
	internalToerentalP2021 : INT;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[FUNCTION_BLOCK FB_Regelingen
VAR

	
END_VAR

(* Gegevens doorsturen naar de subfunctieblokken *)
Uitlaten.PompStatus := Pomp1;
Uitmalen.PompStatus := Pomp2;
END_METHOD
]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{7a5154a8-d0ab-4aca-a913-d3242cae32ca}" />
    <Folder Name="Properties" Id="{64d43a35-4d5a-4d04-a035-1c51de5047d0}" />
    <Method Name="Excute" Id="{63571029-8e9a-4487-8846-7eb1ac19ffd7}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD Excute : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF BestuurMode = 1 THEN
    StartRegeling();  (* Start automatische regeling als de modus actief is *)
ELSE
    StopRegeling();   (* Zet de regeling uit in handmatige modus *)
END_IF

(* Gegevens doorsturen naar de subfunctieblokken *)
Uitlaten.PompStatus := Pomp1;
Uitmalen.PompStatus := Pomp2;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartRegeling" Id="{b46af18e-9800-4f78-8701-c2159a7865ad}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD StartRegeling : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE BestuurMode OF
    0:  (* Handmatige modus *)
        ModeStatus := 'Handmatig';
        (* Schakel pompen in of uit handmatig *)
        Pomp1 := 0;  (* Pomp standby, handmatig inschakelen via HMI *)
        Pomp2 := 0;

    1:  (* Automatische modus *)
        ModeStatus := 'Automatisch';

        (* Regelstand 1: Debiet *)
        Uitlaten.RegelStand := RegelStand1;
        Uitlaten.Execute();

        (* Regelstand 2: Polderpeil *)
        Inmalen.RegelStand := RegelStand2;
        Inmalen.Execute();

        (* Errorberekening *)
        DebietError := RegelStand1 - Uitlaten.ActueelDebiet;
        PolderpeilError := RegelStand2 - Inmalen.ActueelPolderpeil;

        (* Beslis de status van de pompen *)
        IF DebietError > 0.1 THEN
            Pomp1 := 1;  (* Schakel pomp 1 in als debiet onder setpoint is *)
        ELSE
            Pomp1 := 0;
        END_IF

        IF PolderpeilError > 0.05 THEN
            Pomp2 := 1;  (* Schakel pomp 2 in als peil onder setpoint is *)
        ELSE
            Pomp2 := 0;
        END_IF;

        (* Pomp 1 berekening *)
        IF P2021_stand = 1 AND BestuurMode = 1 THEN
            berekenRPM(GewenstdebietV2013 := RegelStand1, polderHoogteVerschil := polderHoogteVerschil, pompIndex := 2, RPM := berekendeRPM_REAL);
            berekendeRPM_UINT := LREAL_TO_UINT(In := berekendeRPM_REAL);

            IF berekendeRPM_UINT < minRPM_M2021 THEN
                M2021_ON := FALSE;
                stuurM2021(0, minRPM_M2021, maxRPM_M2021, P2021_status, P2021_setpoint, stuurRPM_M2021, currentRPM_M2021);
            ELSE
                M2021_ON := TRUE;
                stuurM2021(berekendeRPM_UINT, minRPM_M2021, maxRPM_M2021, P2021_status, P2021_setpoint, stuurRPM_M2021, currentRPM_M2021);
            END_IF;
        END_IF;

        (* Pomp 2 berekening *)
        IF P2011_stand = 1 AND BestuurMode = 1 THEN
            berekenRPM(GewenstdebietV2013 := RegelStand1, polderHoogteVerschil := polderHoogteVerschil, pompIndex := 2, RPM := berekendeRPM2_REAL);
            berekendeRPM2_UINT := LREAL_TO_UINT(In := berekendeRPM2_REAL);
            stuurM2011(berekendeRPM2_UINT, minRPM_M2011, maxRPM_M2011, P2011_status, P2011_setpoint, stuurRPM_M2011, currentRPM_M2011);

            IF berekendeRPM2_UINT < minRPM_M2011 THEN
                M2011_ON := FALSE;
            ELSE
                M2011_ON := TRUE;
            END_IF;

        ELSIF P2011_stand = 1 AND BestuurMode = 2 THEN
            IF zomerPijl = TRUE THEN
                streefPijl := 180;
            END_IF;
        END_IF;
    ELSE
        ModeStatus := 'Onbekend';
        Pomp1 := 0;
        Pomp2 := 0;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Property Name="Statusdebiet" Id="{27f04e5c-872c-417b-b202-7a7edac38bfd}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY Statusdebiet : BOOL]]></Declaration>
      <Get Name="Get" Id="{0df83d80-bdac-4b44-bc88-00d562838eb3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[RegelschuifStandV2022 := internalRegelschuifStandV2022;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{9059e5f4-2721-43bc-8e0e-724abee52b74}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[internalRegelschuifStandV2022 := RegelschuifStandV2022;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="ToerentalP2011" Id="{a0f08cbb-fea4-4e47-9c72-4a53599b6c38}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY ToerentalP2011 : INT]]></Declaration>
      <Get Name="Get" Id="{cde78827-a38d-4b92-81d4-9333a5eb2ad4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ToerentalP2011 := internalToerentalP2011;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c50b0b11-1f65-436f-bc39-0a87e0b63fbe}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[internalToerentalP2011 := ToerentalP2011;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="ToerentalP2021" Id="{8985ff52-3298-4fc8-aa83-ceecf5a234e2}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY ToerentalP2021 : INT]]></Declaration>
      <Get Name="Get" Id="{64ce7207-5106-4e28-8d0f-a19017054c1e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ToerentalP2011 := internalToerentalP2021;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{810193cf-b8f4-44af-854a-e5e0ee173417}">
        <Declaration><![CDATA[VAR
END_VAR


END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[(* Methode om de regeling te stoppen *)
ModeStatus := 'Gestopt';
Pomp1 := 0;       (* Zet beide pompen uit *)
Pomp2 := 0;
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Regelingen">
      <LineId Id="1" Count="10" />
    </LineIds>
    <LineIds Name="FB_Regelingen.Excute">
      <LineId Id="1" Count="8" />
    </LineIds>
    <LineIds Name="FB_Regelingen.StartRegeling">
      <LineId Id="1" Count="70" />
    </LineIds>
    <LineIds Name="FB_Regelingen.RegelschuifStandV2022.Set">
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelingen.ToerentalP2011.Get">
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelingen.ToerentalP2011.Set">
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelingen.ToerentalP2021.Get">
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelingen.StopRegeling">
      <LineId Id="1" Count="4" />
    </LineIds>
  </POU>
</TcPlcObject>