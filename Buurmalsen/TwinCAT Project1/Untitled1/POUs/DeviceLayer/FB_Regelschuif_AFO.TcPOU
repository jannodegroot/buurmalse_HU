<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="FB_Regelschuif_AFO" Id="{e3716e21-c926-4b53-b092-edc4b4bb1690}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Regelschuif_AFO IMPLEMENTS ITF_Regelschuif
VAR
	tagName : STRING;
	outputOpen : ITF_Schuif_DigOutOpen_AFO;
	outputClose : ITF_Schuif_DigOutClose_AFO;
	inputPosition : ITF_Schuif_AnaIn_AFO;

	currentMode : E_Bedrijfstoestand := E_Bedrijfstoestand.off;
	currentState : E_RegelschuifState := E_RegelschuifState.standby;
	expectedState : E_RegelschuifState := E_RegelschuifState.standby;
	
	feedbackPosition : SINT;
	
	timeOut : TON;
	errorTrigger : R_TRIG;
	positie : SINT;
	secondTimerRun : BOOL;
	secondTimerTrigger : R_TRIG;
	
	timerrunt: BOOL:=1;
	minuteTimer : TON;
	secondTimer : TON;
	
	veranderingsMargeError : SINT := 3;
	OldPosition: SINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Als de mode is uit dan worden de outputs false geset 
IF currentMode = E_Bedrijfstoestand.off THEN
	outputOpen.set(FALSE);
	outputClose.set(FALSE);
END_IF

// De feedback positie staat hiet zodat we de waardes kunnen veranderen
feedbackPosition := inputPosition.get();
ActueelPosition := inputPosition.get();

// Dit is de timer om te checken of er een error moet zijn 
timeOut(IN :=(StateRegelSchuif <> E_RegelschuifState.standby) AND NOT timeOut.Q, PT := T#30S);
errorTrigger(CLK := timeOut.Q);

IF errorTrigger.Q THEN
	IF (ActueelPosition < (OldPosition + veranderingsMargeError)) AND StateRegelSchuif = E_RegelschuifState.opening THEN
		StateRegelSchuif := E_RegelschuifState.error;
		main.alarms.append(tag := tagName, msg := 'Schuifstoring gedetecteerd, te langzaam openen');
	END_IF
	IF (ActueelPosition > (OldPosition - veranderingsMargeError)) AND StateRegelSchuif = E_RegelschuifState.closing THEN
		StateRegelSchuif := E_RegelschuifState.error;
		main.alarms.append(tag := tagName, msg := 'Schuifstoring gedetecteerd, te langzaam sluiten');
	END_IF
	IF StateRegelSchuif = E_RegelschuifState.error AND (ActueelPosition > (OldPosition + veranderingsMargeError)) THEN
		StateRegelSchuif := E_RegelschuifState.opening;
		ELSIF StateRegelSchuif = E_RegelschuifState.error AND (ActueelPosition < (OldPosition - veranderingsMargeError)) THEN
			StateRegelSchuif := E_RegelschuifState.closing;
	END_IF
	OldPosition := ActueelPosition;
END_IF

expectedState := StateRegelSchuif;
]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{19e33316-aa4d-4340-a18c-c48173f3eae7}" />
    <Folder Name="Properties" Id="{e2e5e1b1-49a7-46d0-8daf-b77eea7842e6}" />
    <Property Name="ActueelPosition" Id="{2d2a6d11-befa-4588-8131-86e3894c6457}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY ActueelPosition : SINT]]></Declaration>
      <Get Name="Get" Id="{fc7c4d48-73b9-47ec-8f27-7cd7b636e38c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ActueelPosition := feedbackPosition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{9454e573-b814-4817-822e-cf1729db9dd6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[feedbackPosition := ActueelPosition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="FB_Init" Id="{3a2e7ee9-0040-407c-9fdc-e034eb20bdea}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)   
	tag : STRING;
	DigOutOpening : ITF_Schuif_DigOutOpen_AFO;
	DigOutClosing : ITF_Schuif_DigOutClose_AFO;
	AnaInPosition : ITF_Schuif_AnaIn_AFO;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[tagname := tag;
outputOpen := DigOutOpening;
outputClose := DigOutClosing;
inputPosition := AnaInPosition;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="RegelSchuifGoTo" Id="{79c61f24-d77f-47a4-b036-2823abebfb78}" FolderPath="Methods\">
      <Declaration><![CDATA[METHOD RegelSchuifGoTo : SINT
VAR	
	checkPositions : BOOL;
	currentstatet: E_RegelschuifState;
	secondTriggerTrigger: BOOL;
	waitExtraMinute: BOOL;
END_VAR
VAR_INPUT
	regelschuifdoel : SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[minuteTimer(IN:= timerrunt,PT:= T#10S);

// dit is zodat het gefaseerd gaat een pulse per sec sturen
secondTimer(IN:= secondTimerRun,PT:= T#5S); // pulse lengte langer ivm testen
secondTimerTrigger(CLK := secondTriggerTrigger);
IF secondTimerTrigger.Q THEN
	secondTimerRun := TRUE;
END_IF
IF secondTimer.Q THEN
	outputClose.set(FALSE);
	outputOpen.set(FALSE);
	secondTimerRun := FALSE;
	secondTriggerTrigger := FALSE;
END_IF


IF currentMode = E_Bedrijfstoestand.off THEN
	regelschuifdoel := ActueelPosition;
END_IF

IF minuteTimer.Q THEN
	
	IF ActueelPosition >= (regelschuifdoel - 3) AND ActueelPosition <= (regelschuifdoel + 3) THEN // huidige positie is correct binnen 3%
		StateRegelSchuif := E_RegelschuifState.standby;
	
	END_IF
	
	IF ActueelPosition > (regelschuifdoel + 3) AND waitExtraMinute = FALSE THEN // huidige positie is te hoog
		IF stateRegelschuif <> E_RegelschuifState.error THEN
			StateRegelSchuif := E_RegelschuifState.closing;
		END_IF
		// voor de pulse		
		outputOpen.set(FALSE);
		outputClose.set(TRUE);
		secondTriggerTrigger := TRUE; 
		waitExtraMinute := TRUE; // wacht een minuut extra als er een pulse is gestuurd
	END_IF

	IF ActueelPosition < (regelschuifdoel - 3) AND waitExtraMinute = FALSE THEN // huidige positie is te laag
		IF stateRegelschuif <> E_RegelschuifState.error THEN
			StateRegelSchuif := E_RegelschuifState.opening;
		END_IF
		// voor de pulse
		outputClose.set(FALSE);
		outputOpen.set(TRUE);
		secondTriggerTrigger := TRUE; 
		waitExtraMinute := TRUE;
	END_IF
	timerrunt := 0; // reset timer
	waitExtraMinute := FALSE;
ELSE
	timerrunt := 1; //reser reset timer
END_IF

positie := regelschuifdoel;
			]]></ST>
      </Implementation>
    </Method>
    <Property Name="StateRegelSchuif" Id="{970eafd1-96ea-40c0-b909-2be329c20549}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY StateRegelSchuif : E_RegelschuifState]]></Declaration>
      <Get Name="Get" Id="{75d5413c-e9a2-4d07-852b-3149b8f38d87}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[StateRegelschuif := currentState;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c2a73e76-74c5-4c09-8b03-2178d70ef95f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[currentstate:= StateRegelSchuif;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="FB_Regelschuif_AFO">
      <LineId Id="116" Count="0" />
      <LineId Id="1" Count="2" />
      <LineId Id="5" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="8" Count="2" />
      <LineId Id="90" Count="2" />
      <LineId Id="94" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="103" Count="2" />
      <LineId Id="102" Count="0" />
      <LineId Id="108" Count="1" />
      <LineId Id="111" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="106" Count="1" />
      <LineId Id="88" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="97" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelschuif_AFO.ActueelPosition.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelschuif_AFO.ActueelPosition.Set">
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelschuif_AFO.FB_Init">
      <LineId Id="1" Count="4" />
    </LineIds>
    <LineIds Name="FB_Regelschuif_AFO.RegelSchuifGoTo">
      <LineId Id="17" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="50" Count="1" />
      <LineId Id="42" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="4" Count="1" />
      <LineId Id="16" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="30" Count="2" />
      <LineId Id="19" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelschuif_AFO.StateRegelSchuif.Get">
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="FB_Regelschuif_AFO.StateRegelSchuif.Set">
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>